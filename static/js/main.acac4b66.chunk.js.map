{"version":3,"sources":["components/photos.js","components/imgGallery.jsx","components/header.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["photos","src","width","height","ImgGallery","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","onClick","onClose","currentIndex","views","map","x","srcset","srcSet","caption","title","Header","style","margin","textAlign","Footer","App","message","toggleMessage","className","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"2NAAaA,EAAS,CACpB,CACEC,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,oDACLC,MAAO,KACPC,OAAQ,KAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,GAEV,CACEF,IAAK,kDACLC,MAAO,EACPC,OAAQ,IC3CGC,EAnCI,WAAO,IAAD,EACiBC,mBAAS,GAD1B,mBAChBC,EADgB,KACFC,EADE,OAEiBF,oBAAS,GAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,KAIjBC,EAAeC,uBAAY,SAACC,EAAD,GAA6B,EAAnBC,MAAoB,IAAbC,EAAY,EAAZA,MAChDP,EAAgBO,GAChBL,GAAgB,KACf,IAOH,OACE,6BACE,kBAAC,IAAD,CAAST,OAAQA,EAAQe,QAASL,IAClC,kBAAC,IAAD,KACGF,EACC,kBAAC,IAAD,CAAOQ,QAVO,WACpBT,EAAgB,GAChBE,GAAgB,KASR,kBAAC,IAAD,CACEQ,aAAcX,EACdY,MAAOlB,EAAOmB,KAAI,SAACC,GAAD,sBACbA,EADa,CAEhBC,OAAQD,EAAEE,OACVC,QAASH,EAAEI,cAIf,QCtBGC,EAXA,WACb,OACE,yBAAKC,MAAO,CAAEC,OAAQ,OAAQC,UAAW,WACvC,4BACE,kDAEF,8GCFSC,EAJA,WACb,OAAS,6BAAK,wEC+BDC,EA5BH,WAAO,IAAD,EACiBzB,oBAAS,GAD1B,mBACT0B,EADS,KACAC,EADA,KAEhB,OACE,6BACGD,EACC,yBAAKE,UAAU,OACb,4BAAQA,UAAU,cAChB,4BACE,kDAGF,gFAIJ,yBAAKP,MAAO,CAAEC,OAAQ,QACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGJ,yBAAKD,MAAO,CAAEE,UAAW,SAAUM,UAAW,SAC5C,4BAAQnB,QAAS,kBAAMiB,GAAeD,KAAtC,gBACA,kBAAC,EAAD,SChBYI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMrB,a","file":"static/js/main.acac4b66.chunk.js","sourcesContent":["export const photos = [\n  {\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\n    width: 1,\n    height: 1\n  },\n  {\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/XiDA78wAZVw/600x799\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://source.unsplash.com/x8xJpClTvR0/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/u9cG4cuJ6bU/4927x1000\",\n    width: 4927,\n    height: 1000\n  },\n  {\n    src: \"https://source.unsplash.com/qGQNmBE7mYw/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/NuO6iTBkHxE/800x599\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/pF1ug8ysTtY/600x400\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/A-fubu9QJxE/800x533\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://source.unsplash.com/5P91SF0zNsI/740x494\",\n    width: 4,\n    height: 3\n  }\n];\n\n// TODO: explore gallery options\n\n// export const photos = [\n//   {\n//     src: \"https://source.unsplash.com/2ShvY8Lf6l0/1600x1200\",\n//     srcSet: [\n//       \"https://source.unsplash.com/2ShvY8Lf6l0/500x375 500w\",\n//       \"https://source.unsplash.com/2ShvY8Lf6l0/800x600 800w\",\n//       \"https://source.unsplash.com/2ShvY8Lf6l0/1024x768 1024w\",\n//       \"https://source.unsplash.com/2ShvY8Lf6l0/1600x1200 1600w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/Dm-qxdynoEc/1600x1600\",\n//     srcSet: [\n//       \"https://source.unsplash.com/Dm-qxdynoEc/500x500 500w\",\n//       \"https://source.unsplash.com/Dm-qxdynoEc/800x800 800w\",\n//       \"https://source.unsplash.com/Dm-qxdynoEc/1024x1024 1024w\",\n//       \"https://source.unsplash.com/Dm-qxdynoEc/1600x1600 1600w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 1,\n//     height: 1\n//   },\n//   {\n//     src: \"https://source.unsplash.com/qDkso9nvCg0/1200x1600\",\n//     srcSet: [\n//       \"https://source.unsplash.com/qDkso9nvCg0/375x500 375w\",\n//       \"https://source.unsplash.com/qDkso9nvCg0/600x800 600w\",\n//       \"https://source.unsplash.com/qDkso9nvCg0/768x1024 768w\",\n//       \"https://source.unsplash.com/qDkso9nvCg0/1200x1600 1200w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/iecJiKe_RNg/1200x1600\",\n//     srcSet: [\n//       \"https://source.unsplash.com/iecJiKe_RNg/375x500 375w\",\n//       \"https://source.unsplash.com/iecJiKe_RNg/600x800 600w\",\n//       \"https://source.unsplash.com/iecJiKe_RNg/768x1024 768w\",\n//       \"https://source.unsplash.com/iecJiKe_RNg/1200x1600 1200w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/epcsn8Ed8kY/1200x1600\",\n//     srcSet: [\n//       \"https://source.unsplash.com/epcsn8Ed8kY/375x500 375w\",\n//       \"https://source.unsplash.com/epcsn8Ed8kY/600x800 600w\",\n//       \"https://source.unsplash.com/epcsn8Ed8kY/768x1024 768w\",\n//       \"https://source.unsplash.com/epcsn8Ed8kY/1200x1600 1200w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/NQSWvyVRIJk/1600x1200\",\n//     srcSet: [\n//       \"https://source.unsplash.com/NQSWvyVRIJk/500x375 500w\",\n//       \"https://source.unsplash.com/NQSWvyVRIJk/800x600 800w\",\n//       \"https://source.unsplash.com/NQSWvyVRIJk/1024x768 1024w\",\n//       \"https://source.unsplash.com/NQSWvyVRIJk/1600x1200 1600w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/zh7GEuORbUw/1200x1600\",\n//     srcSet: [\n//       \"https://source.unsplash.com/zh7GEuORbUw/375x500 375w\",\n//       \"https://source.unsplash.com/zh7GEuORbUw/600x800 600w\",\n//       \"https://source.unsplash.com/zh7GEuORbUw/768x1024 768w\",\n//       \"https://source.unsplash.com/zh7GEuORbUw/1200x1600 1200w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 3,\n//     height: 4\n//   },\n//   {\n//     src: \"https://source.unsplash.com/PpOHJezOalU/1600x1200\",\n//     srcSet: [\n//       \"https://source.unsplash.com/PpOHJezOalU/500x375 500w\",\n//       \"https://source.unsplash.com/PpOHJezOalU/800x600 800w\",\n//       \"https://source.unsplash.com/PpOHJezOalU/1024x768 1024w\",\n//       \"https://source.unsplash.com/PpOHJezOalU/1600x1200 1600w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 4,\n//     height: 3\n//   },\n//   {\n//     src: \"https://source.unsplash.com/I1ASdgphUH4/1600x1200\",\n//     srcSet: [\n//       \"https://source.unsplash.com/I1ASdgphUH4/500x375 500w\",\n//       \"https://source.unsplash.com/I1ASdgphUH4/800x600 800w\",\n//       \"https://source.unsplash.com/I1ASdgphUH4/1024x768 1024w\",\n//       \"https://source.unsplash.com/I1ASdgphUH4/1600x1200 1600w\"\n//     ],\n//     sizes: [\"(min-width: 480px) 50vw,(min-width: 1024px) 33.3vw,100vw\"],\n//     width: 4,\n//     height: 3\n//   }\n// ];\n\n\n","import React, { useState, useCallback } from 'react';\nimport { render } from 'react-dom';\nimport Gallery from 'react-photo-gallery';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\nimport { photos } from './photos';\n\nconst ImgGallery = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Gallery photos={photos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map((x) => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title,\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n};\n\nexport default ImgGallery;\n","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div style={{ margin: '10px', textAlign: 'center' }}>\n      <h1>\n        <b>CYAN BLUE CREATIVE</b>\n      </h1>\n      <h5>⚠ currently under re-construction (these are stock photos) ⚠️</h5>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return ( <div><h5>contact me: chase@cyanbluecreative.com</h5></div> );\n}\n \nexport default Footer;","import React, { useState } from 'react';\nimport './App.css';\nimport ImgGallery from './components/imgGallery';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nconst App = () => {\n  const [message, toggleMessage] = useState(true);\n  return (\n    <div>\n      {message ? (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              <b>CYAN BLUE CREATIVE</b>\n            </h1>\n\n            <small>☕ Currently Undergoing Upgrades ☕</small>\n          </header>\n        </div>\n      ) : (\n        <div style={{ margin: '5px' }}>\n          <Header />\n          <ImgGallery />\n        </div>\n      )}\n      <div style={{ textAlign: 'center', marginTop: '15px' }}>\n        <button onClick={() => toggleMessage(!message)}>♥️</button>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}